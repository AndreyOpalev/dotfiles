set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

Plugin 'scrooloose/nerdtree'
Plugin 'airblade/vim-gitgutter'
Plugin 'preservim/nerdcommenter'
Plugin 'kien/ctrlp.vim'
Plugin 'scrooloose/syntastic'
Plugin 'benmills/vimux'
Plugin 'rip-rip/clang_complete'
Plugin 'qpkorr/vim-bufkill' " Kill buffer without closing the window


" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required


"" Open NERDTree automatically when nvim starts up on openning a directory
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | exe 'cd '.argv()[0] | endif

"" Key bindings / maps
nmap <F6> :NERDTreeToggle<CR>
map <F2> :bn<CR>
map <F3> :bp<CR>

"" Indentation
set ts=2    "tabstop
set sts=2   "softtabstop
set sw=2    "shiftwidth
set et "expand tabs to spaces

"" Enable line numbering
set number

" Список используемых кодировок для автоматического их определения
set fileencodings=utf-8,cp1251

" Clang_complete config
" let g:clang_library_path='/usr/lib/llvm-9/lib'
let g:clang_library_path='/usr/lib/x86_64-linux-gnu'
let g:clang_complete_auto=0 "" Doesn't do autocompletion afro -> . ::
let g:clang_close_preview=1 "" Close the preview windows after a completion


" Confgiure VIM's completion
set completeopt=menuone,preview,noinsert

"" Configure Ctrlp
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'

let g:ctrlp_working_path_mode = 'ra'

set wildignore+=*/tmp/*,*.so,*.swp,*.zip     " MacOSX/Linux

" Config Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_cpp_check_header = 1
let g:syntastic_mode_map = { 'mode': 'passive', 'active_filetypes': [],'passive_filetypes': [] }

